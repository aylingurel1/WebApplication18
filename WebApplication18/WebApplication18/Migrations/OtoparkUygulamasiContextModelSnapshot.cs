// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication18.Models;

#nullable disable

namespace WebApplication18.Migrations
{
    [DbContext(typeof(OtoparkUygulamasiContext))]
    partial class OtoparkUygulamasiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication18.Models.Araclar", b =>
                {
                    b.Property<int>("AracId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AracID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AracId"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("KullaniciID");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Plaka")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Renk")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AracId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Araclar");
                });

            modelBuilder.Entity("WebApplication18.Models.Fiyatlandirma", b =>
                {
                    b.Property<int>("FiyatlandirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FiyatlandirmaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiyatlandirmaId"));

                    b.Property<decimal>("AylıkFiyat")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("GünlükFiyat")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ParkYeriTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SaatlikFiyat")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("FiyatlandirmaId");

                    b.ToTable("Fiyatlandirma");
                });

            modelBuilder.Entity("WebApplication18.Models.GirisCikisKayitlari", b =>
                {
                    b.Property<int>("KayitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KayitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KayitId"));

                    b.Property<int>("AracId")
                        .HasColumnType("int")
                        .HasColumnName("AracID");

                    b.Property<DateTime?>("CikisZamani")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("GirisZamani")
                        .HasColumnType("datetime");

                    b.Property<int>("ParkYeriId")
                        .HasColumnType("int")
                        .HasColumnName("ParkYeriID");

                    b.HasKey("KayitId");

                    b.HasIndex("AracId");

                    b.HasIndex("ParkYeriId");

                    b.ToTable("GirisCikisKayitlari");
                });

            modelBuilder.Entity("WebApplication18.Models.Kullanicilar", b =>
                {
                    b.Property<int>("KullaniciId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KullaniciID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KullaniciId"));

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SifreHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("KullaniciId");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("WebApplication18.Models.Odemeler", b =>
                {
                    b.Property<int>("OdemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OdemeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdemeId"));

                    b.Property<decimal>("Miktar")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime");

                    b.Property<string>("OdemeYontemi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("int")
                        .HasColumnName("RezervasyonID");

                    b.HasKey("OdemeId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("WebApplication18.Models.ParkYerleri", b =>
                {
                    b.Property<int>("ParkYeriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParkYeriID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParkYeriId"));

                    b.Property<bool>("DolulukDurumu")
                        .HasColumnType("bit");

                    b.Property<string>("Konum")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParkYeriNumarasi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ParkYeriId");

                    b.ToTable("ParkYerleri");
                });

            modelBuilder.Entity("WebApplication18.Models.Rezervasyonlar", b =>
                {
                    b.Property<int>("RezervasyonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervasyonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervasyonId"));

                    b.Property<DateTime>("BaslangicZamani")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BitisZamani")
                        .HasColumnType("datetime");

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int")
                        .HasColumnName("KullaniciID");

                    b.Property<int>("ParkYeriId")
                        .HasColumnType("int")
                        .HasColumnName("ParkYeriID");

                    b.HasKey("RezervasyonId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("ParkYeriId");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("WebApplication18.Models.Araclar", b =>
                {
                    b.HasOne("WebApplication18.Models.Kullanicilar", "Kullanici")
                        .WithMany("Araclars")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("WebApplication18.Models.GirisCikisKayitlari", b =>
                {
                    b.HasOne("WebApplication18.Models.Araclar", "Arac")
                        .WithMany("GirisCikisKayitlaris")
                        .HasForeignKey("AracId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication18.Models.ParkYerleri", "ParkYeri")
                        .WithMany("GirisCikisKayitlaris")
                        .HasForeignKey("ParkYeriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arac");

                    b.Navigation("ParkYeri");
                });

            modelBuilder.Entity("WebApplication18.Models.Odemeler", b =>
                {
                    b.HasOne("WebApplication18.Models.Rezervasyonlar", "Rezervasyon")
                        .WithMany("Odemelers")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("WebApplication18.Models.Rezervasyonlar", b =>
                {
                    b.HasOne("WebApplication18.Models.Kullanicilar", "Kullanici")
                        .WithMany("Rezervasyonlars")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication18.Models.ParkYerleri", "ParkYeri")
                        .WithMany("Rezervasyonlars")
                        .HasForeignKey("ParkYeriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("ParkYeri");
                });

            modelBuilder.Entity("WebApplication18.Models.Araclar", b =>
                {
                    b.Navigation("GirisCikisKayitlaris");
                });

            modelBuilder.Entity("WebApplication18.Models.Kullanicilar", b =>
                {
                    b.Navigation("Araclars");

                    b.Navigation("Rezervasyonlars");
                });

            modelBuilder.Entity("WebApplication18.Models.ParkYerleri", b =>
                {
                    b.Navigation("GirisCikisKayitlaris");

                    b.Navigation("Rezervasyonlars");
                });

            modelBuilder.Entity("WebApplication18.Models.Rezervasyonlar", b =>
                {
                    b.Navigation("Odemelers");
                });
#pragma warning restore 612, 618
        }
    }
}
